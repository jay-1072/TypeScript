let myArr = [];
myArr.push(42);
myArr.push("Jay");
myArr.push(true);
// console.log(myArr);
// console.log(typeof myArr);
myArr.push(false);


let tup:[string, number, boolean] = ['Jay', 21, true];

let arr:(string|number|boolean)[] = ['AJay', 22, false];

// tup[0] = 5;
// arr[0] = 5;

// arr = tup;
// tup = arr;

// let empTuple = ["Vivek Singh", 22, "Honesty"];
// empTuple[0] = 23;

// Operation on tuples
tup.push(232);
arr.push('Vijay');
// console.log(tup);
// console.log(arr);

// let i:any;
// for(i in tup) {
//     console.log(tup[i]);
// }

let empTuple = ["Rohit Sharma", 25, "JavaTpoint"];  
let [emp, student] = empTuple;  
// console.log(emp);  
// console.log(student);  
  

function myFun(tup:[string, number, boolean]):void {
    let i:any;
    for(i in tup) {
        console.log(tup[i]);
    }
}

myFun(tup);






const myObj = {
    prop1:'Jay',
    prop2:42,
}

// myObj.prop1 = 40;

type Guitarlist = {
    name:string,
    active:boolean,
    albums:(string|number)[];
}

let evh:Guitarlist = {
    name: 'Jay',
    active: true,
    albums: ['Hi', 123, 'Hello'] 
}

let jp:Guitarlist = {
    name: 'Jimmy',
    active: true,
    albums: ['I', 'II' , 'III'] 
}

evh = jp;

console.log(evh);
console.log(jp);

var employee = {
    firstname:'Jay',
    lastname:'Koshti',
    // sayHello: ()=>{return "Hello"}
    sayHello: function() {}

}

employee.sayHello = function() {
    return employee.firstname;
}

function display(obj:{firstname:string, lastname:string, sayHello:()=>string}):void {
    console.log(obj.firstname + " " + obj.lastname + " " + obj.sayHello());
}

console.log(employee.sayHello());

interface IPoint { 
   x:number 
   y:number 
} 
function addPoints(p1:IPoint,p2:IPoint):IPoint { 
   var x = p1.x + p2.x 
   var y = p1.y + p2.y 
   return {x:x,y:y} 
} 

//Valid 
var newPoint = addPoints({x:3,y:4},{x:5,y:1})  

//Error 
var newPoint2 = addPoints({x:1},{x:4,y:3})